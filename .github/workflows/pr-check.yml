# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: PR Check

on:
  pull_request:
    branches: [develop]

jobs:
  code_check:
    if: '${{ github.event.pull_request.head.repo.full_name == github.repository }}'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code.
        uses: actions/checkout@v2

      - name: create test env file
        working-directory: ./
        run: |
          touch .env
          echo NODE_ENV=test >> .env
          echo PORT=${{ secrets.PORT }} >> .env
          echo MONGODB_URI=${{ secrets.MONGODB_URI }} >> .env
          echo MONGODB_DEV_URI=${{ secrets.MONGODB_DEV_URI }} >> .env
          echo MONGODB_TEST_URI=${{ secrets.MONGODB_TEST_URI }} >> .env
          echo JWT_SECRET=${{ secrets.JWT_SECRET }} >> .env
          echo JWT_ALGO=${{ secrets.JWT_ALGO }} >> .env
          echo SLACK_ALARM_URI=${{ secrets.SLACK_ALARM_URI }} >> .env

      - name: test
        working-directory: ./
        run: |
          yarn
          yarn test

      - name: build server files
        working-directory: ./
        run: |
          rm .env
          touch .env
          echo NODE_ENV=${{ secrets.NODE_ENV }} >> .env
          echo PORT=${{ secrets.PORT }} >> .env
          echo MONGODB_URI=${{ secrets.MONGODB_URI }} >> .env
          echo MONGODB_DEV_URI=${{ secrets.MONGODB_DEV_URI }} >> .env
          echo MONGODB_TEST_URI=${{ secrets.MONGODB_TEST_URI }} >> .env
          echo JWT_SECRET=${{ secrets.JWT_SECRET }} >> .env
          echo JWT_ALGO=${{ secrets.JWT_ALGO }} >> .env
          echo SLACK_ALARM_URI=${{ secrets.SLACK_ALARM_URI }} >> .env

          yarn run build
